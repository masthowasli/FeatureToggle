<?php
/**
 * File of the feature collection tests
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * PHP version 5.3
 *
 * @category   Masthowasli
 * @package    FeatureToggle
 * @subpackage Tests
 * @author     Thomas Sliwa <ts@unfinished.dyndns.org>
 * @copyright  2012-2014 - Thomas Sliwa
 * @license    http://opensource.org/licenses/MIT MIT
 * @link       https://github.com/masthowasli/FeatureToggle
 */

namespace Masthowasli\Component\FeatureToggle\Tests\Feature;

use Masthowasli\Component\FeatureToggle\Feature\Collection;
use Masthowasli\Component\FeatureToggle\Feature\Toggled;


/**
 * Test class for Feature.
 * Generated by PHPUnit on 2013-04-04 at 16:27:27.
 */
class CollectionTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Collection
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Collection();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    public function testConstructorInvalid()
    {
        $this->setExpectedException(
            '\Masthowasli\Component\FeatureToggle\Exception\Feature'
        );
        $coll = new Collection(array(1, 2, 3));
    }

    public function testConstructorValid()
    {
        $coll = new Collection(
            array(
                new Toggled('foo'),
                new Toggled('bar')
            )
        );

        $this->assertEquals(2, $coll->count());
    }

    public function testOffsetSetException()
    {
        $this->setExpectedException(
            'Masthowasli\Component\FeatureToggle\Exception\Feature'
        );

        $this->object['someOffset'] = 1;
    }

    public function testOffsetSet()
    {
        $feature = new Toggled('a-feature');

        $this->object['a-key'] = $feature;

        $this->assertEquals($feature, $this->object['a-key']);
    }

    public function testAppendException()
    {
        $this->setExpectedException(
            'Masthowasli\Component\FeatureToggle\Exception\Feature'
        );

        $this->object->append('not a feature');
    }

    public function testAppend()
    {
        $feature = new Toggled('a-feature');

        $this->object->append($feature);

        $this->assertEquals($feature, $this->object[0]);
    }
}