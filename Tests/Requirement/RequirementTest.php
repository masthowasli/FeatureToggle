<?php
/**
 * File of the Requirement tests
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * PHP version 5.3
 *
 * @category   Masthowasli
 * @package    FeatureToggle
 * @subpackage Tests
 * @author     Thomas Sliwa <ts@unfinished.dyndns.org>
 * @copyright  2012-2013 - Thomas Sliwa
 * @license    http://opensource.org/licenses/MIT MIT
 * @link       https://github.com/masthowasli/FeatureToggle
 */

namespace Masthowasli\Component\FeatureToggle\Tests;

use Masthowasli\Component\FeatureToggle\Feature;
use Masthowasli\Component\FeatureToggle\Requirement\Requirement;

/**
 * Test class for Requirement.
 * Generated by PHPUnit on 2013-04-15 at 08:42:19.
 */
class RequirementTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var \Masthowasli\Component\FeatureToggle\Feature
     */
    protected $feature;

    /**
     * @var Requirement
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->feature = new Feature('foo');
        $this->object = new Requirement($this->feature);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * Tests initial state of a new requirement
     *
     * @covers \Masthowasli\Component\FeatureToggle\Requirement\Requirement::__construct()
     */
    public function testDefaultConstructor()
    {
        $this->assertAttributeInstanceOf('\Masthowasli\Component\FeatureToggle\Feature', 'feature', $this->object);
        $this->assertEquals(Requirement::FEATURE_ENABLED, $this->object->getRequiredState());
    }

    /**
     * Tests the get required state of a requirement method
     *
     * @covers \Masthowasli\Component\FeatureToggle\Requirement\Requirement::__construct()
     */
    public function testGetRequiredState()
    {
        $this->assertEquals(Requirement::FEATURE_ENABLED, $this->object->getRequiredState());
    }

    /**
     * Tests the successful set required state of a requirement method invocation
     *
     * @covers \Masthowasli\Component\FeatureToggle\Requirement\Requirement::__construct()
     *
     * @depends \Masthowasli\Component\FeatureToggle\Tests\Requirement\RequirementTest::testGetRequiredState
     */
    public function testSetRequiredStateValid()
    {
        $this->object->setRequiredState(Requirement::FEATURE_DISABLED);
        $this->assertEquals(Requirement::FEATURE_DISABLED, $this->object->getRequiredState());
        $this->object->setRequiredState(Requirement::FEATURE_ENABLED);
        $this->assertEquals(Requirement::FEATURE_ENABLED, $this->object->getRequiredState());
    }

    /**
     * Tests the not successful set required state of a requirement method invocation
     *
     * @covers \Masthowasli\Component\FeatureToggle\Requirement\Requirement::__construct()
     *
     * @depends RequirementTest::testGetRequiredState
     */
    public function testSetRequiredStateNotValid()
    {
        $this->setExpectedException('\Masthowasli\Component\FeatureToggle\Requirement\RequirementException');
        $this->object->setRequiredState('somthing');
        $this->setExpectedException('\Masthowasli\Component\FeatureToggle\Requirement\RequirementException');
        $this->object->setRequiredState(68); // Jaromir Jagr, hockey god
    }
}
